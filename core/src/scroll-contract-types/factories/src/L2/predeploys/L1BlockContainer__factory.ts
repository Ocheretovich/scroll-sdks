/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  L1BlockContainer,
  L1BlockContainerInterface,
} from "../../../../src/L2/predeploys/L1BlockContainer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockHeight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "stateRoot",
        type: "bytes32",
      },
    ],
    name: "ImportBlock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_oldWhitelist",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newWhitelist",
        type: "address",
      },
    ],
    name: "UpdateWhitelist",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_blockHash",
        type: "bytes32",
      },
    ],
    name: "getBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_blockHash",
        type: "bytes32",
      },
    ],
    name: "getStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_blockHeaderRLP",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_updateGasPriceOracle",
        type: "bool",
      },
    ],
    name: "importBlockHeader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_startBlockHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_startBlockHeight",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_startBlockTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint128",
        name: "_startBlockBaseFee",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "_startStateRoot",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBaseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "metadata",
    outputs: [
      {
        internalType: "uint64",
        name: "height",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
      {
        internalType: "uint128",
        name: "baseFee",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "stateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newWhitelist",
        type: "address",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelist",
    outputs: [
      {
        internalType: "contract IWhitelist",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ed9380380610ed983398101604081905261002f9161008e565b6100388161003e565b506100be565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a057600080fd5b81516001600160a01b03811681146100b757600080fd5b9392505050565b610e0c806100cd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637122ba061161009757806393e59dc11161006657806393e59dc1146102ae5780639690ae23146102c1578063afbba398146102d4578063f2fde38b146102e757600080fd5b80637122ba06146101e5578063715018a61461025b578063841f127c146102635780638da5cb5b1461028357600080fd5b80633d0f963e116100d35780633d0f963e146101775780634599c7881461018c57806356e214e4146101ac5780636c4f6ba9146101dc57600080fd5b80630385f4f1146100fa5780630c1952d3146101305780632cb5837814610157575b600080fd5b600254600090815260046020526040902054600160801b90046001600160801b03165b6040519081526020015b60405180910390f35b600254600090815260046020526040902054600160401b90046001600160401b031661011d565b61011d610165366004610be9565b60009081526003602052604090205490565b61018a610185366004610c02565b6102fa565b005b6002546000908152600460205260409020546001600160401b031661011d565b61011d6101ba366004610be9565b600090815260046020526040902054600160401b90046001600160401b031690565b61011d60025481565b61022c6101f3366004610be9565b6004602052600090815260409020546001600160401b0380821691600160401b810490911690600160801b90046001600160801b031683565b604080516001600160401b0394851681529390921660208401526001600160801b031690820152606001610127565b61018a61038e565b61011d610271366004610be9565b60036020526000908152604090205481565b600054610296906001600160a01b031681565b6040516001600160a01b039091168152602001610127565b600154610296906001600160a01b031681565b61018a6102cf366004610c4e565b6103c4565b61018a6102e2366004610cbf565b610539565b61018a6102f5366004610c02565b610b0d565b6000546001600160a01b0316331461032d5760405162461bcd60e51b815260040161032490610d4d565b60405180910390fd5b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f22d1c35fe072d2e42c3c8f9bd4a0d34aa84a0101d020a62517b33fdb3174e5f7910160405180910390a15050565b6000546001600160a01b031633146103b85760405162461bcd60e51b815260040161032490610d4d565b6103c26000610b99565b565b6000546001600160a01b031633146103ee5760405162461bcd60e51b815260040161032490610d4d565b600254156104345760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610324565b6002859055600085815260036020908152604080832084905580516060810182526001600160401b0380891682528781168285019081526001600160801b038089168486019081528c885260049096529584902092518354915195518716600160801b02958316600160401b026fffffffffffffffffffffffffffffffff1990921692169190911717909316919091179091555185907fa7823f45e1ee21f9530b77959b57507ad515a14fa9fa24d262ee80e79b2b57459061052a9087908790879087906001600160401b0394851681529290931660208301526001600160801b03166040820152606081019190915260800190565b60405180910390a25050505050565b60015460405163efc7840160e01b81523360048201526001600160a01b039091169063efc7840190602401602060405180830381865afa158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a59190610d84565b6105ea5760405162461bcd60e51b81526020600482015260166024820152752737ba103bb434ba32b634b9ba32b21039b2b73232b960511b6044820152606401610324565b60008060008060006106c4565b6308c379a060e01b60005260206004528060445260005b81156106235760089190911b9060010161060e565b8060245260646000fd5b8061063b5761063b826105f7565b5050565b600080823560001a60808110156106595750600193915050565b60b881101561067357607f19019360019390930192915050565b60c08110156106a95760b78103600481111561068b57fe5b60018581013560088302610100031c96919095019094019392505050565b506106bf684e6f742076616c756560b81b6105f7565b915091565b876000813560001a60f88110156106d757fe5b60f6190160208111156106e657fe5b604051600184830181019481013560088402610100031c9092019091019150818b82379081209061072f72084d8dec6d640d0c2e6d040dad2e6dac2e8c6d606b1b8d841461062d565b600091505b601082101561076f576107468361063f565b602182101561075d57803560208390036008021c83525b01925060019190910190602001610734565b61079d7f48656164657220524c50206c656e677468206d69736d617463680000000000008b8d01851461062d565b505060408051805160608201516101008301516101608401516101e090940151600084815260036020529590952054929a509098509650909450909250905061081e5760405162461bcd60e51b815260206004820152601360248201527214185c995b9d081b9bdd081a5b5c1bdc9d1959606a1b6044820152606401610324565b600085815260046020908152604091829020825160608101845290546001600160401b03808216808452600160401b8304821694840194909452600160801b9091046001600160801b0316938201939093529185169061087f906001610da1565b6001600160401b0316146108cd5760405162461bcd60e51b8152602060048201526015602482015274084d8dec6d640d0cad2ced0e840dad2e6dac2e8c6d605b1b6044820152606401610324565b826001600160401b031681602001516001600160401b0316111561093d5760405162461bcd60e51b815260206004820152602160248201527f506172656e7420626c6f636b20686173206c61726765722074696d657374616d6044820152600760fc1b6064820152608401610324565b8960028190555084600360008c8152602001908152602001600020819055506040518060600160405280856001600160401b03168152602001846001600160401b03168152602001836001600160801b0316815250600460008c815260200190815260200160002060008201518160000160006101000a8154816001600160401b0302191690836001600160401b0316021790555060208201518160000160086101000a8154816001600160401b0302191690836001600160401b0316021790555060408201518160000160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050897fa7823f45e1ee21f9530b77959b57507ad515a14fa9fa24d262ee80e79b2b574585858589604051610a9294939291906001600160401b0394851681529290931660208301526001600160801b03166040820152606081019190915260800190565b60405180910390a28615610b015760405163bede39b560e01b81526001600160801b03831660048201526002605360981b019063bede39b590602401600060405180830381600087803b158015610ae857600080fd5b505af1158015610afc573d6000803e3d6000fd5b505050505b50505050505050505050565b6000546001600160a01b03163314610b375760405162461bcd60e51b815260040161032490610d4d565b6001600160a01b038116610b8d5760405162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610324565b610b9681610b99565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610bfb57600080fd5b5035919050565b600060208284031215610c1457600080fd5b81356001600160a01b0381168114610c2b57600080fd5b9392505050565b80356001600160401b0381168114610c4957600080fd5b919050565b600080600080600060a08688031215610c6657600080fd5b85359450610c7660208701610c32565b9350610c8460408701610c32565b925060608601356001600160801b0381168114610ca057600080fd5b949793965091946080013592915050565b8015158114610b9657600080fd5b60008060008060608587031215610cd557600080fd5b8435935060208501356001600160401b0380821115610cf357600080fd5b818701915087601f830112610d0757600080fd5b813581811115610d1657600080fd5b886020828501011115610d2857600080fd5b6020830195508094505050506040850135610d4281610cb1565b939692955090935050565b60208082526017908201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b600060208284031215610d9657600080fd5b8151610c2b81610cb1565b6001600160401b03818116838216019080821115610dcf57634e487b7160e01b600052601160045260246000fd5b509291505056fea264697066735822122083f8c262ce06f0462cf5a78bbfa91243f750327bdee59e787853e290ec49727464736f6c63430008100033";

type L1BlockContainerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1BlockContainerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1BlockContainer__factory extends ContractFactory {
  constructor(...args: L1BlockContainerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      L1BlockContainer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): L1BlockContainer__factory {
    return super.connect(runner) as L1BlockContainer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1BlockContainerInterface {
    return new Interface(_abi) as L1BlockContainerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): L1BlockContainer {
    return new Contract(address, _abi, runner) as unknown as L1BlockContainer;
  }
}
