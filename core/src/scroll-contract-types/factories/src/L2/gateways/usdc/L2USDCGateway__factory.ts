/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  L2USDCGateway,
  L2USDCGatewayInterface,
} from "../../../../../src/L2/gateways/usdc/L2USDCGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1USDC",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2USDC",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterpart",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_messenger",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ErrorCallerIsNotCounterpartGateway",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorCallerIsNotMessenger",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorNotInDropMessageContext",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "FinalizeDepositERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "WithdrawERC20",
    type: "event",
  },
  {
    inputs: [],
    name: "circleCaller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counterpart",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeDepositERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getL1ERC20Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getL2ERC20Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_counterpart",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_messenger",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "pauseDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "pauseWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferUSDCRoles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "updateCircleCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
    ],
    name: "withdrawERC20AndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162001c7438038062001c748339810160408190526200003591620001da565b8282826001600160a01b03831615806200005657506001600160a01b038116155b15620000755760405163a7f9319d60e01b815260040160405180910390fd5b6001600160a01b0392831660805290821660a052811660c05285161580620000a457506001600160a01b038416155b80620000b757506001600160a01b038216155b15620000d65760405163a7f9319d60e01b815260040160405180910390fd5b620000e0620000fc565b5050506001600160a01b0391821660e05216610100526200024a565b600054610100900460ff1615620001695760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620001bb576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b80516001600160a01b0381168114620001d557600080fd5b919050565b600080600080600060a08688031215620001f357600080fd5b620001fe86620001bd565b94506200020e60208701620001bd565b93506200021e60408701620001bd565b92506200022e60608701620001bd565b91506200023e60808701620001bd565b90509295509295909350565b60805160a05160c05160e0516101005161198a620002ea600039600081816101ba015281816103b80152818161073501528181610ab20152610c8501526000818161027101528181610345015281816106c00152610e4901526000818161020f015281816105560152818161059e0152610ec801526000818161046c0152610d4a0152600081816102e0015281816106290152610ef7015261198a6000f3fe6080604052600436106101355760003560e01c80638431f5c1116100ab578063c676ad291161006f578063c676ad291461039a578063c689fc34146103da578063ebd462cb146103fa578063f0d7c29c1461041a578063f2fde38b1461043a578063f887ea401461045a57600080fd5b80638431f5c1146103025780638da5cb5b14610315578063a6f7366914610333578063a93a4af914610367578063c0c53b8b1461037a57600080fd5b8063415855d6116100fd578063415855d61461023157806354bbd59c14610253578063575361b6146102935780636c07ea43146102a6578063715018a6146102b9578063797594b0146102ce57600080fd5b806302befd241461013a5780631f878ae61461017057806329e96f9e146101a85780632f3ffb9f146101dc5780633cb747bf146101fd575b600080fd5b34801561014657600080fd5b5060fb5461015b90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561017c57600080fd5b5060fb54610190906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b3480156101b457600080fd5b506101907f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e857600080fd5b5060fb5461015b90600160a81b900460ff1681565b34801561020957600080fd5b506101907f000000000000000000000000000000000000000000000000000000000000000081565b34801561023d57600080fd5b5061025161024c366004611400565b61048e565b005b34801561025f57600080fd5b5061019061026e366004611439565b507f000000000000000000000000000000000000000000000000000000000000000090565b6102516102a136600461149f565b6104b4565b6102516102b436600461151a565b610500565b3480156102c557600080fd5b5061025161053f565b3480156102da57600080fd5b506101907f000000000000000000000000000000000000000000000000000000000000000081565b61025161031036600461154f565b610553565b34801561032157600080fd5b506065546001600160a01b0316610190565b34801561033f57600080fd5b506101907f000000000000000000000000000000000000000000000000000000000000000081565b6102516103753660046115e7565b610912565b34801561038657600080fd5b5061025161039536600461162d565b610925565b3480156103a657600080fd5b506101906103b5366004611439565b507f000000000000000000000000000000000000000000000000000000000000000090565b3480156103e657600080fd5b506102516103f5366004611439565b610a3b565b34801561040657600080fd5b50610251610415366004611400565b610b11565b34801561042657600080fd5b50610251610435366004611439565b610b37565b34801561044657600080fd5b50610251610455366004611439565b610b61565b34801561046657600080fd5b506101907f000000000000000000000000000000000000000000000000000000000000000081565b610496610bda565b60fb8054911515600160a01b0260ff60a01b19909216919091179055565b6104f886868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250610c34915050565b505050505050565b61053a83338460005b6040519080825280601f01601f191660200182016040528015610533576020820181803683370190505b5085610c34565b505050565b610547610bda565b6105516000610fbd565b565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461059c576040516385bd908d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061168e565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461066f576040516307b140f360e51b815260040160405180910390fd5b61067761100f565b34156106be5760405162461bcd60e51b81526020600482015260116024820152706e6f6e7a65726f206d73672e76616c756560781b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b0316146107335760405162461bcd60e51b81526020600482015260116024820152706c3120746f6b656e206e6f74205553444360781b60448201526064016106b5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316146107a85760405162461bcd60e51b81526020600482015260116024820152706c3220746f6b656e206e6f74205553444360781b60448201526064016106b5565b60fb54600160a01b900460ff16156107f35760405162461bcd60e51b815260206004820152600e60248201526d19195c1bdcda5d081c185d5cd95960921b60448201526064016106b5565b6040516340c10f1960e01b81526001600160a01b038581166004830152602482018590528716906340c10f19906044016020604051808303816000875af1158015610842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086691906116ab565b6108a55760405162461bcd60e51b815260206004820152601060248201526f1b5a5b9d081554d110c819985a5b195960821b60448201526064016106b5565b846001600160a01b0316866001600160a01b0316886001600160a01b03167f165ba69f6ab40c50cade6f65431801e5f9c7d7830b7545391920db039133ba34878787876040516108f894939291906116c8565b60405180910390a461090960018055565b50505050505050565b61091f8484846000610509565b50505050565b600054610100900460ff16158080156109455750600054600160ff909116105b8061095f5750303b15801561095f575060005460ff166001145b6109c25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106b5565b6000805460ff1916600117905580156109e5576000805461ff0019166101001790555b6109f084848461106e565b801561091f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60fb546001600160a01b0316336001600160a01b031614610a935760405162461bcd60e51b815260206004820152601260248201527137b7363c9031b4b931b6329031b0b63632b960711b60448201526064016106b5565b60405163f2fde38b60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063f2fde38b90602401600060405180830381600087803b158015610af657600080fd5b505af1158015610b0a573d6000803e3d6000fd5b5050505050565b610b19610bda565b60fb8054911515600160a81b0260ff60a81b19909216919091179055565b610b3f610bda565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b610b69610bda565b6001600160a01b038116610bce5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106b5565b610bd781610fbd565b50565b6065546001600160a01b031633146105515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106b5565b610c3c61100f565b60008311610c835760405162461bcd60e51b81526020600482015260146024820152731dda5d1a191c985dc81e995c9bc8185b5bdd5b9d60621b60448201526064016106b5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614610cfb5760405162461bcd60e51b81526020600482015260146024820152731bdb9b1e481554d110c81a5cc8185b1b1bddd95960621b60448201526064016106b5565b60fb54600160a81b900460ff1615610d475760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc81c185d5cd959608a1b60448201526064016106b5565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316819003610d925782806020019051810190610d8d9190611734565b935090505b825115610dd75760405162461bcd60e51b815260206004820152601360248201527218d85b1b081a5cc81b9bdd08185b1b1bddd959606a1b60448201526064016106b5565b610dec6001600160a01b03871682308761107e565b604051630852cd8d60e31b8152600481018590526001600160a01b038716906342966c6890602401600060405180830381600087803b158015610e2e57600080fd5b505af1158015610e42573d6000803e3d6000fd5b50506040517f0000000000000000000000000000000000000000000000000000000000000000925060009150610e869083908a9086908b908b908b90602401611823565b60408051601f198184030181529181526020820180516001600160e01b031663084bd13b60e41b1790525163b2267a7b60e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b2267a7b903490610f26907f00000000000000000000000000000000000000000000000000000000000000009060009087908b90600401611872565b6000604051808303818588803b158015610f3f57600080fd5b505af1158015610f53573d6000803e3d6000fd5b5050505050826001600160a01b0316886001600160a01b0316836001600160a01b03167fd8d3a3f4ab95694bef40475997598bcf8acd3ed9617a4c1013795429414c27e88a8a8a604051610fa9939291906118aa565b60405180910390a4505050610b0a60018055565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600154036110615760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106b5565b6002600155565b60018055565b6110766110d8565b61053a611107565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261091f908590611136565b600054610100900460ff166110ff5760405162461bcd60e51b81526004016106b5906118da565b61055161120b565b600054610100900460ff1661112e5760405162461bcd60e51b81526004016106b5906118da565b610551611232565b600061118b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112629092919063ffffffff16565b90508051600014806111ac5750808060200190518101906111ac91906116ab565b61053a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b5565b600054610100900460ff166110685760405162461bcd60e51b81526004016106b5906118da565b600054610100900460ff166112595760405162461bcd60e51b81526004016106b5906118da565b61055133610fbd565b60606112718484600085611279565b949350505050565b6060824710156112da5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106b5565b600080866001600160a01b031685876040516112f69190611925565b60006040518083038185875af1925050503d8060008114611333576040519150601f19603f3d011682016040523d82523d6000602084013e611338565b606091505b509150915061134987838387611354565b979650505050505050565b606083156113c35782516000036113bc576001600160a01b0385163b6113bc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b5565b5081611271565b61127183838151156113d85781518083602001fd5b8060405162461bcd60e51b81526004016106b59190611941565b8015158114610bd757600080fd5b60006020828403121561141257600080fd5b813561141d816113f2565b9392505050565b6001600160a01b0381168114610bd757600080fd5b60006020828403121561144b57600080fd5b813561141d81611424565b60008083601f84011261146857600080fd5b50813567ffffffffffffffff81111561148057600080fd5b60208301915083602082850101111561149857600080fd5b9250929050565b60008060008060008060a087890312156114b857600080fd5b86356114c381611424565b955060208701356114d381611424565b945060408701359350606087013567ffffffffffffffff8111156114f657600080fd5b61150289828a01611456565b979a9699509497949695608090950135949350505050565b60008060006060848603121561152f57600080fd5b833561153a81611424565b95602085013595506040909401359392505050565b600080600080600080600060c0888a03121561156a57600080fd5b873561157581611424565b9650602088013561158581611424565b9550604088013561159581611424565b945060608801356115a581611424565b93506080880135925060a088013567ffffffffffffffff8111156115c857600080fd5b6115d48a828b01611456565b989b979a50959850939692959293505050565b600080600080608085870312156115fd57600080fd5b843561160881611424565b9350602085013561161881611424565b93969395505050506040820135916060013590565b60008060006060848603121561164257600080fd5b833561164d81611424565b9250602084013561165d81611424565b9150604084013561166d81611424565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116a057600080fd5b815161141d81611424565b6000602082840312156116bd57600080fd5b815161141d816113f2565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b60005b8381101561172b578181015183820152602001611713565b50506000910152565b6000806040838503121561174757600080fd5b825161175281611424565b602084015190925067ffffffffffffffff8082111561177057600080fd5b818501915085601f83011261178457600080fd5b81518181111561179657611796611678565b604051601f8201601f19908116603f011681019083821181831017156117be576117be611678565b816040528281528860208487010111156117d757600080fd5b6117e8836020830160208801611710565b80955050505050509250929050565b6000815180845261180f816020860160208601611710565b601f01601f19169290920160200192915050565b6001600160a01b03878116825286811660208301528581166040830152841660608201526080810183905260c060a08201819052600090611866908301846117f7565b98975050505050505050565b60018060a01b038516815283602082015260806040820152600061189960808301856117f7565b905082606083015295945050505050565b60018060a01b03841681528260208201526060604082015260006118d160608301846117f7565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611937818460208701611710565b9190910192915050565b60208152600061141d60208301846117f756fea2646970667358221220cb7e7bea43ac30195110d76d4505fdf57872e28f09af31f5a71b79861668028c64736f6c63430008100033";

type L2USDCGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2USDCGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2USDCGateway__factory extends ContractFactory {
  constructor(...args: L2USDCGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _l1USDC: AddressLike,
    _l2USDC: AddressLike,
    _counterpart: AddressLike,
    _router: AddressLike,
    _messenger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _l1USDC,
      _l2USDC,
      _counterpart,
      _router,
      _messenger,
      overrides || {}
    );
  }
  override deploy(
    _l1USDC: AddressLike,
    _l2USDC: AddressLike,
    _counterpart: AddressLike,
    _router: AddressLike,
    _messenger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _l1USDC,
      _l2USDC,
      _counterpart,
      _router,
      _messenger,
      overrides || {}
    ) as Promise<
      L2USDCGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): L2USDCGateway__factory {
    return super.connect(runner) as L2USDCGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2USDCGatewayInterface {
    return new Interface(_abi) as L2USDCGatewayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): L2USDCGateway {
    return new Contract(address, _abi, runner) as unknown as L2USDCGateway;
  }
}
