/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ETHRateLimiter,
  ETHRateLimiterInterface,
} from "../../../src/rate-limiter/ETHRateLimiter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_periodDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint104",
        name: "_totalLimit",
        type: "uint104",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedTotalLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "PeriodIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TotalLimitIsZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldTotalLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTotalLimit",
        type: "uint256",
      },
    ],
    name: "UpdateTotalLimit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addUsedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPeriod",
    outputs: [
      {
        internalType: "uint48",
        name: "lastUpdateTs",
        type: "uint48",
      },
      {
        internalType: "uint104",
        name: "limit",
        type: "uint104",
      },
      {
        internalType: "uint104",
        name: "amount",
        type: "uint104",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint104",
        name: "_newTotalLimit",
        type: "uint104",
      },
    ],
    name: "updateTotalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516108f43803806108f483398101604081905261002f91610178565b6100383361007c565b826000036100595760405163b5ed5a3b60e01b815260040160405180910390fd5b60808390526001600160a01b03821660a052610074816100cc565b5050506101d4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160681b03166000036100f65760405163da5ab69760e01b815260040160405180910390fd5b600180546001600160681b038381166601000000000000908102600160301b600160981b03198416179093556040519290910416907f8ec00d672a6b3e206153ee1fbb4384308387f13de90f3cf9bd334c20811628d09061016c90839085909182526001600160681b0316602082015260400190565b60405180910390a15050565b60008060006060848603121561018d57600080fd5b835160208501519093506001600160a01b03811681146101ac57600080fd5b60408501519092506001600160681b03811681146101c957600080fd5b809150509250925092565b60805160a0516106ed6102076000396000818161016a01526101dd015260008181610135015261023201526106ed6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b470aade1161005b578063b470aade14610130578063e8edc81614610165578063f27ffd7d1461018c578063f2fde38b1461019f57600080fd5b8063060406181461008d578063663cb8ce146100ee578063715018a6146101035780638da5cb5b1461010b575b600080fd5b6001546100bb9065ffffffffffff8116906001600160681b03600160301b8204811691600160981b90041683565b6040805165ffffffffffff90941684526001600160681b0392831660208501529116908201526060015b60405180910390f35b6101016100fc3660046105d5565b6101b2565b005b6101016101c6565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e5565b6101577f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100e5565b6101187f000000000000000000000000000000000000000000000000000000000000000081565b61010161019a366004610605565b6101da565b6101016101ad36600461061e565b610391565b6101ba61040c565b6101c381610466565b50565b6101ce61040c565b6101d86000610518565b565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461022357604051631d91f03d60e11b815260040160405180910390fd5b8060000361022e5750565b60007f000000000000000000000000000000000000000000000000000000000000000061025b814261065d565b610265919061067f565b6040805160608101825260015465ffffffffffff81168083526001600160681b03600160301b830481166020850152600160981b90920490911692820192909252919250600091908311156102bc578391506102d8565b8381604001516001600160681b03166102d5919061069e565b91505b80602001516001600160681b03168211156103065760405163aadc515160e01b815260040160405180910390fd5b65ffffffffffff4216815261031a82610568565b6001600160681b0390811660408301819052825160018054602090950151600160981b90930272ffffffffffffffffffffffffffffffffffffff93909416600160301b0272ffffffffffffffffffffffffffffffffffffff1990951665ffffffffffff909216919091179390931716179055505050565b61039961040c565b6001600160a01b0381166104035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101c381610518565b6000546001600160a01b031633146101d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fa565b806001600160681b03166000036104905760405163da5ab69760e01b815260040160405180910390fd5b600180546001600160681b03838116600160301b90810272ffffffffffffffffffffffffff000000000000198416179093556040519290910416907f8ec00d672a6b3e206153ee1fbb4384308387f13de90f3cf9bd334c20811628d09061050c90839085909182526001600160681b0316602082015260400190565b60405180910390a15050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160681b038211156105d15760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663034206269747360c81b60648201526084016103fa565b5090565b6000602082840312156105e757600080fd5b81356001600160681b03811681146105fe57600080fd5b9392505050565b60006020828403121561061757600080fd5b5035919050565b60006020828403121561063057600080fd5b81356001600160a01b03811681146105fe57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008261067a57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561069957610699610647565b500290565b808201808211156106b1576106b1610647565b9291505056fea264697066735822122051edc336e8ad6b6884211b7a541a27afaa849df6056a41bf66188c618f2b9d9e64736f6c63430008100033";

type ETHRateLimiterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHRateLimiterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHRateLimiter__factory extends ContractFactory {
  constructor(...args: ETHRateLimiterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _periodDuration: BigNumberish,
    _spender: AddressLike,
    _totalLimit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _periodDuration,
      _spender,
      _totalLimit,
      overrides || {}
    );
  }
  override deploy(
    _periodDuration: BigNumberish,
    _spender: AddressLike,
    _totalLimit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _periodDuration,
      _spender,
      _totalLimit,
      overrides || {}
    ) as Promise<
      ETHRateLimiter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ETHRateLimiter__factory {
    return super.connect(runner) as ETHRateLimiter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHRateLimiterInterface {
    return new Interface(_abi) as ETHRateLimiterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ETHRateLimiter {
    return new Contract(address, _abi, runner) as unknown as ETHRateLimiter;
  }
}
