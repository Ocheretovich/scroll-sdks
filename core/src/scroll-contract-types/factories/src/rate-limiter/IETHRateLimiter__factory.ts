/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IETHRateLimiter,
  IETHRateLimiterInterface,
} from "../../../src/rate-limiter/IETHRateLimiter";

const _abi = [
  {
    inputs: [],
    name: "CallerNotSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedTotalLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "PeriodIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TotalLimitIsZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldTotalLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTotalLimit",
        type: "uint256",
      },
    ],
    name: "UpdateTotalLimit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addUsedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IETHRateLimiter__factory {
  static readonly abi = _abi;
  static createInterface(): IETHRateLimiterInterface {
    return new Interface(_abi) as IETHRateLimiterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IETHRateLimiter {
    return new Contract(address, _abi, runner) as unknown as IETHRateLimiter;
  }
}
