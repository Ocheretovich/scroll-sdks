/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ScrollStandardERC20,
  ScrollStandardERC20Interface,
} from "../../../../src/libraries/token/ScrollStandardERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "counterpart",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_counterpart",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6119f3806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b85780639dc29fac1161007c5780639dc29fac146102a1578063a457c2d7146102b4578063a9059cbb146102c7578063c820f146146102da578063d505accf146102ed578063dd62ed3e1461030057600080fd5b806370a082311461022f578063797594b0146102585780637ecebe001461026b57806384b0196e1461027e57806395d89b411461029957600080fd5b8063313ce567116100ff578063313ce567146101cd5780633644e515146101ec57806339509351146101f45780634000aea01461020757806340c10f191461021a57600080fd5b806306fdde031461013c578063095ea7b31461015a578063116191b61461017d57806318160ddd146101a857806323b872dd146101ba575b600080fd5b610144610313565b6040516101519190611416565b60405180910390f35b61016d61016836600461144c565b6103a5565b6040519015158152602001610151565b60cc54610190906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6035545b604051908152602001610151565b61016d6101c8366004611476565b6103bf565b60cd54600160a01b900460ff1660405160ff9091168152602001610151565b6101ac6103e3565b61016d61020236600461144c565b6103f2565b61016d6102153660046114b2565b610414565b61022d61022836600461144c565b610472565b005b6101ac61023d366004611539565b6001600160a01b031660009081526033602052604090205490565b60cd54610190906001600160a01b031681565b6101ac610279366004611539565b6104ce565b6102866104ec565b6040516101519796959493929190611554565b61014461058a565b61022d6102af36600461144c565b610599565b61016d6102c236600461144c565b6105ec565b61016d6102d536600461144c565b610667565b61022d6102e836600461169e565b610675565b61022d6102fb366004611734565b6107dd565b6101ac61030e36600461179e565b610941565b606060368054610322906117d1565b80601f016020809104026020016040519081016040528092919081815260200182805461034e906117d1565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b5050505050905090565b6000336103b381858561096c565b60019150505b92915050565b6000336103cd858285610a91565b6103d8858585610b0b565b506001949350505050565b60006103ed610cb6565b905090565b6000336103b38185856104058383610941565b61040f9190611805565b61096c565b60006104208585610667565b506001600160a01b0385163b156103d8576103d8858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cc092505050565b60cc546001600160a01b031633146104c05760405162461bcd60e51b815260206004820152600c60248201526b4f6e6c79204761746577617960a01b60448201526064015b60405180910390fd5b6104ca8282610d2a565b5050565b6001600160a01b0381166000908152609960205260408120546103b9565b6000606080600080600060606065546000801b14801561050c5750606654155b6105505760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064016104b7565b610558610deb565b610560610dfa565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060378054610322906117d1565b60cc546001600160a01b031633146105e25760405162461bcd60e51b815260206004820152600c60248201526b4f6e6c79204761746577617960a01b60448201526064016104b7565b6104ca8282610e09565b600033816105fa8286610941565b90508381101561065a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104b7565b6103d8828686840361096c565b6000336103b3818585610b0b565b600054610100900460ff16158080156106955750600054600160ff909116105b806106af5750303b1580156106af575060005460ff166001145b6107125760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104b7565b6000805460ff191660011790558015610735576000805461ff0019166101001790555b61073e86610f3a565b6107488686610f87565b60cd805460cc80546001600160a01b038088166001600160a01b03199283161790925590851660ff8816600160a01b02919091166001600160a81b03199092169190911717905580156107d5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b8342111561082d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104b7565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861085c8c610fb8565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006108b782610fe0565b905060006108c78287878761100d565b9050896001600160a01b0316816001600160a01b03161461092a5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104b7565b6109358a8a8a61096c565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166109ce5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b7565b6001600160a01b038216610a2f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b7565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610a9d8484610941565b90506000198114610b055781811015610af85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b7565b610b05848484840361096c565b50505050565b6001600160a01b038316610b6f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b7565b6001600160a01b038216610bd15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b7565b6001600160a01b03831660009081526033602052604090205481811015610c495760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104b7565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ca99086815260200190565b60405180910390a3610b05565b60006103ed611035565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed3690610cf290339087908790600401611826565b600060405180830381600087803b158015610d0c57600080fd5b505af1158015610d20573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038216610d805760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b7565b8060356000828254610d929190611805565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606060678054610322906117d1565b606060688054610322906117d1565b6001600160a01b038216610e695760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b7565b6001600160a01b03821660009081526033602052604090205481811015610edd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104b7565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610a84565b505050565b600054610100900460ff16610f615760405162461bcd60e51b81526004016104b790611856565b610f8481604051806040016040528060018152602001603160f81b8152506110a9565b50565b600054610100900460ff16610fae5760405162461bcd60e51b81526004016104b790611856565b6104ca82826110f8565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60006103b9610fed610cb6565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600061101e87878787611138565b9150915061102b816111fc565b5095945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611060611346565b61106861139f565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600054610100900460ff166110d05760405162461bcd60e51b81526004016104b790611856565b60676110dc83826118e7565b5060686110e982826118e7565b50506000606581905560665550565b600054610100900460ff1661111f5760405162461bcd60e51b81526004016104b790611856565b603661112b83826118e7565b506037610f3582826118e7565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561116f57506000905060036111f3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111c3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111ec576000600192509250506111f3565b9150600090505b94509492505050565b6000816004811115611210576112106119a7565b036112185750565b600181600481111561122c5761122c6119a7565b036112795760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104b7565b600281600481111561128d5761128d6119a7565b036112da5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104b7565b60038160048111156112ee576112ee6119a7565b03610f845760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104b7565b600080611351610deb565b805190915015611368578051602090910120919050565b60655480156113775792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b6000806113aa610dfa565b8051909150156113c1578051602090910120919050565b60665480156113775792915050565b6000815180845260005b818110156113f6576020818501810151868301820152016113da565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061142960208301846113d0565b9392505050565b80356001600160a01b038116811461144757600080fd5b919050565b6000806040838503121561145f57600080fd5b61146883611430565b946020939093013593505050565b60008060006060848603121561148b57600080fd5b61149484611430565b92506114a260208501611430565b9150604084013590509250925092565b600080600080606085870312156114c857600080fd5b6114d185611430565b935060208501359250604085013567ffffffffffffffff808211156114f557600080fd5b818701915087601f83011261150957600080fd5b81358181111561151857600080fd5b88602082850101111561152a57600080fd5b95989497505060200194505050565b60006020828403121561154b57600080fd5b61142982611430565b60ff60f81b881681526000602060e08184015261157460e084018a6113d0565b8381036040850152611586818a6113d0565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156115d8578351835292840192918401916001016115bc565b50909c9b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261161157600080fd5b813567ffffffffffffffff8082111561162c5761162c6115ea565b604051601f8301601f19908116603f01168101908282118183101715611654576116546115ea565b8160405283815286602085880101111561166d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461144757600080fd5b600080600080600060a086880312156116b657600080fd5b853567ffffffffffffffff808211156116ce57600080fd5b6116da89838a01611600565b965060208801359150808211156116f057600080fd5b506116fd88828901611600565b94505061170c6040870161168d565b925061171a60608701611430565b915061172860808701611430565b90509295509295909350565b600080600080600080600060e0888a03121561174f57600080fd5b61175888611430565b965061176660208901611430565b955060408801359450606088013593506117826080890161168d565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156117b157600080fd5b6117ba83611430565b91506117c860208401611430565b90509250929050565b600181811c908216806117e557607f821691505b602082108103610fda57634e487b7160e01b600052602260045260246000fd5b808201808211156103b957634e487b7160e01b600052601160045260246000fd5b60018060a01b038416815282602082015260606040820152600061184d60608301846113d0565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610f3557600081815260208120601f850160051c810160208610156118c85750805b601f850160051c820191505b818110156107d5578281556001016118d4565b815167ffffffffffffffff811115611901576119016115ea565b6119158161190f84546117d1565b846118a1565b602080601f83116001811461194a57600084156119325750858301515b600019600386901b1c1916600185901b1785556107d5565b600085815260208120601f198616915b828110156119795788860151825594840194600190910190840161195a565b50858210156119975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220c15dcd5ff8a816ca84d10999cf3f0b8e59e25c6d55703e8996c6872b89e10d7d64736f6c63430008100033";

type ScrollStandardERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScrollStandardERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScrollStandardERC20__factory extends ContractFactory {
  constructor(...args: ScrollStandardERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ScrollStandardERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ScrollStandardERC20__factory {
    return super.connect(runner) as ScrollStandardERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScrollStandardERC20Interface {
    return new Interface(_abi) as ScrollStandardERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ScrollStandardERC20 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ScrollStandardERC20;
  }
}
