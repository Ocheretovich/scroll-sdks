/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IScrollStandardERC20Factory,
  IScrollStandardERC20FactoryInterface,
} from "../../../../src/libraries/token/IScrollStandardERC20Factory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
    ],
    name: "DeployToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
    ],
    name: "computeL2TokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
    ],
    name: "deployL2Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IScrollStandardERC20Factory__factory {
  static readonly abi = _abi;
  static createInterface(): IScrollStandardERC20FactoryInterface {
    return new Interface(_abi) as IScrollStandardERC20FactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IScrollStandardERC20Factory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IScrollStandardERC20Factory;
  }
}
