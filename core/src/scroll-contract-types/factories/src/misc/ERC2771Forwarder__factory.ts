/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC2771Forwarder,
  ERC2771ForwarderInterface,
} from "../../../src/misc/ERC2771Forwarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "deadline",
        type: "uint48",
      },
    ],
    name: "ERC2771ForwarderExpiredRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "ERC2771ForwarderInvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "ERC2771ForwarderMismatchedValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "ERC2771UntrustfulTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ExecutedForwardRequest",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData[]",
        name: "requests",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "refundReceiver",
        type: "address",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200166b3803806200166b833981016040819052620000359162000201565b80604051806040016040528060018152602001603160f81b8152506200006b6000836200012660201b6200033c1790919060201c565b610120526200008881600162000126602090811b6200033c17901c565b61014052815160208084019190912060e052815190820120610100524660a0526200011660e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200046e565b600060208351101562000146576200013e8362000176565b905062000170565b826200015d83620001c260201b6200036f1760201c565b906200016a908262000348565b5060ff90505b92915050565b600080829050601f81511115620001ad578260405163305a27a960e01b8152600401620001a4919062000414565b60405180910390fd5b8051620001ba8262000449565b179392505050565b90565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001f8578181015183820152602001620001de565b50506000910152565b6000602082840312156200021457600080fd5b81516001600160401b03808211156200022c57600080fd5b818401915084601f8301126200024157600080fd5b815181811115620002565762000256620001c5565b604051601f8201601f19908116603f01168101908382118183101715620002815762000281620001c5565b816040528281528760208487010111156200029b57600080fd5b620002ae836020830160208801620001db565b979650505050505050565b600181811c90821680620002ce57607f821691505b602082108103620002ef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034357600081815260208120601f850160051c810160208610156200031e5750805b601f850160051c820191505b818110156200033f578281556001016200032a565b5050505b505050565b81516001600160401b03811115620003645762000364620001c5565b6200037c81620003758454620002b9565b84620002f5565b602080601f831160018114620003b457600084156200039b5750858301515b600019600386901b1c1916600185901b1785556200033f565b600085815260208120601f198616915b82811015620003e557888601518255948401946001909101908401620003c4565b5085821015620004045787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000825180602084015262000435816040850160208701620001db565b601f01601f19169190910160400192915050565b80516020808301519190811015620002ef5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516111a2620004c960003960006101820152600061015801526000610b9a01526000610b7201526000610acd01526000610af701526000610b2101526111a26000f3fe60806040526004361061004a5760003560e01c806319d8d38c1461004f5780637ecebe001461008457806384b0196e146100c8578063ccf96b4a146100f0578063df905caf14610105575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610cb4565b610118565b60405190151581526020015b60405180910390f35b34801561009057600080fd5b506100ba61009f366004610d0b565b6001600160a01b031660009081526002602052604090205490565b60405190815260200161007b565b3480156100d457600080fd5b506100dd61014a565b60405161007b9796959493929190610d6e565b6101036100fe366004610e04565b6101d2565b005b610103610113366004610cb4565b6102e1565b60008060008061012785610372565b509250925092508280156101385750815b80156101415750805b95945050505050565b60006060808280808361017d7f0000000000000000000000000000000000000000000000000000000000000000836103f7565b6101a87f000000000000000000000000000000000000000000000000000000000000000060016103f7565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6001600160a01b03811615600080805b8581101561029a578686828181106101fc576101fc610ea0565b905060200281019061020e9190610eb6565b61021c906040013584610eec565b9250600061024d88888481811061023557610235610ea0565b90506020028101906102479190610eb6565b8661049b565b9050806102895787878381811061026657610266610ea0565b90506020028101906102789190610eb6565b610286906040013584610eec565b92505b5061029381610eff565b90506101e2565b503482146102c9576040516370647f7960e01b8152600481018390523460248201526044015b60405180910390fd5b80156102d9576102d9848261067e565b505050505050565b8060400135341461031157604080516370647f7960e01b81529082013560048201523460248201526044016102c0565b61031c81600161049b565b61033957604051630a12f52160e11b815260040160405180910390fd5b50565b6000602083511015610358576103518361079c565b9050610369565b816103638482610f98565b5060ff90505b92915050565b90565b600080600080600080610384876107da565b90925090506103a161039c6040890160208a01610d0b565b61094e565b426103b260a08a0160808b01611058565b65ffffffffffff1610158380156103e657506103d160208a018a610d0b565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b606060ff831461040a57610351836109cb565b81805461041690610f18565b80601f016020809104026020016040519081016040528092919081815260200182805461044290610f18565b801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b50505050509050610369565b60008060008060006104ac87610372565b9350935093509350851561057257836104fa576104cf6040880160208901610d0b565b60405163d2650cd160e01b81526001600160a01b0390911660048201523060248201526044016102c0565b826105335761050f60a0880160808901611058565b604051634a777ac560e11b815265ffffffffffff90911660048201526024016102c0565b8161057257806105466020890189610d0b565b604051636422d02b60e11b81526001600160a01b039283166004820152911660248201526044016102c0565b83801561057c5750815b80156105855750825b15610674576001600160a01b03811660009081526002602052604081208054600181019091559050606088013560006105c460408b0160208c01610d0b565b905060408a013560006105da60a08d018d611080565b6105e760208f018f610d0b565b6040516020016105f9939291906110c7565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610628818e610a0a565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505b5050505092915050565b804710156106ce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102c0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461071b576040519150601f19603f3d011682016040523d82523d6000602084013e610720565b606091505b50509050806107975760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102c0565b505050565b600080829050601f815111156107c7578260405163305a27a960e01b81526004016102c091906110ed565b80516107d282611100565b179392505050565b60008080806109296107ef60c0870187611080565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061092392507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610857905060208a018a610d0b565b61086760408b0160208c01610d0b565b60408b013560608c013561088161009f60208f018f610d0b565b8d60800160208101906108949190611058565b8e8060a001906108a49190611080565b6040516108b2929190611124565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e08201526101008101919091526101200160405160208183030381529060405280519060200120610a26565b90610a53565b9092509050600081600481111561094257610942611134565b14959194509092505050565b604051306024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b031663572b6c0560e01b17815282519293506000928392839290918391895afa92503d915060005190508280156109b5575060208210155b80156109c15750600081115b9695505050505050565b606060006109d883610a98565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b610a19603f606083013561114a565b821015610a2257fe5b5050565b6000610369610a33610ac0565b8360405161190160f01b8152600281019290925260228201526042902090565b6000808251604103610a895760208301516040840151606085015160001a610a7d87828585610bf0565b94509450505050610a91565b506000905060025b9250929050565b600060ff8216601f81111561036957604051632cd44ac360e21b815260040160405180910390fd5b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b1957507f000000000000000000000000000000000000000000000000000000000000000046145b15610b4357507f000000000000000000000000000000000000000000000000000000000000000090565b610beb604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610c275750600090506003610cab565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610c7b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ca457600060019250925050610cab565b9150600090505b94509492505050565b600060208284031215610cc657600080fd5b813567ffffffffffffffff811115610cdd57600080fd5b820160e08185031215610cef57600080fd5b9392505050565b6001600160a01b038116811461033957600080fd5b600060208284031215610d1d57600080fd5b8135610cef81610cf6565b6000815180845260005b81811015610d4e57602081850181015186830182015201610d32565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152610d8e60e084018a610d28565b8381036040850152610da0818a610d28565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610df257835183529284019291840191600101610dd6565b50909c9b505050505050505050505050565b600080600060408486031215610e1957600080fd5b833567ffffffffffffffff80821115610e3157600080fd5b818601915086601f830112610e4557600080fd5b813581811115610e5457600080fd5b8760208260051b8501011115610e6957600080fd5b60209283019550935050840135610e7f81610cf6565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000823560de19833603018112610ecc57600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561036957610369610ed6565b600060018201610f1157610f11610ed6565b5060010190565b600181811c90821680610f2c57607f821691505b602082108103610f4c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561079757600081815260208120601f850160051c81016020861015610f795750805b601f850160051c820191505b818110156102d957828155600101610f85565b815167ffffffffffffffff811115610fb257610fb2610e8a565b610fc681610fc08454610f18565b84610f52565b602080601f831160018114610ffb5760008415610fe35750858301515b600019600386901b1c1916600185901b1785556102d9565b600085815260208120601f198616915b8281101561102a5788860151825594840194600190910190840161100b565b50858210156110485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561106a57600080fd5b813565ffffffffffff81168114610cef57600080fd5b6000808335601e1984360301811261109757600080fd5b83018035915067ffffffffffffffff8211156110b257600080fd5b602001915036819003821315610a9157600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b602081526000610cef6020830184610d28565b80516020808301519190811015610f4c5760001960209190910360031b1b16919050565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b60008261116757634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122016c30642ec9f9ec2b0a347b26941e2d4591e144193d5cf1f529dcd4c377b4b4f64736f6c63430008100033";

type ERC2771ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC2771ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC2771Forwarder__factory extends ContractFactory {
  constructor(...args: ERC2771ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, overrides || {});
  }
  override deploy(
    name: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, overrides || {}) as Promise<
      ERC2771Forwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC2771Forwarder__factory {
    return super.connect(runner) as ERC2771Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC2771ForwarderInterface {
    return new Interface(_abi) as ERC2771ForwarderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC2771Forwarder {
    return new Contract(address, _abi, runner) as unknown as ERC2771Forwarder;
  }
}
