/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface IL2ERC721GatewayInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "batchWithdrawERC721(address,uint256[],uint256)"
      | "batchWithdrawERC721(address,address,uint256[],uint256)"
      | "finalizeBatchDepositERC721"
      | "finalizeDepositERC721"
      | "withdrawERC721(address,uint256,uint256)"
      | "withdrawERC721(address,address,uint256,uint256)"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "BatchWithdrawERC721"
      | "FinalizeBatchDepositERC721"
      | "FinalizeDepositERC721"
      | "WithdrawERC721"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "batchWithdrawERC721(address,uint256[],uint256)",
    values: [AddressLike, BigNumberish[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "batchWithdrawERC721(address,address,uint256[],uint256)",
    values: [AddressLike, AddressLike, BigNumberish[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeBatchDepositERC721",
    values: [AddressLike, AddressLike, AddressLike, AddressLike, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeDepositERC721",
    values: [AddressLike, AddressLike, AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawERC721(address,uint256,uint256)",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawERC721(address,address,uint256,uint256)",
    values: [AddressLike, AddressLike, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchWithdrawERC721(address,uint256[],uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchWithdrawERC721(address,address,uint256[],uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalizeBatchDepositERC721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalizeDepositERC721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawERC721(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawERC721(address,address,uint256,uint256)",
    data: BytesLike
  ): Result;
}

export namespace BatchWithdrawERC721Event {
  export type InputTuple = [
    l1Token: AddressLike,
    l2Token: AddressLike,
    from: AddressLike,
    to: AddressLike,
    tokenIds: BigNumberish[]
  ];
  export type OutputTuple = [
    l1Token: string,
    l2Token: string,
    from: string,
    to: string,
    tokenIds: bigint[]
  ];
  export interface OutputObject {
    l1Token: string;
    l2Token: string;
    from: string;
    to: string;
    tokenIds: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace FinalizeBatchDepositERC721Event {
  export type InputTuple = [
    l1Token: AddressLike,
    l2Token: AddressLike,
    from: AddressLike,
    to: AddressLike,
    tokenIds: BigNumberish[]
  ];
  export type OutputTuple = [
    l1Token: string,
    l2Token: string,
    from: string,
    to: string,
    tokenIds: bigint[]
  ];
  export interface OutputObject {
    l1Token: string;
    l2Token: string;
    from: string;
    to: string;
    tokenIds: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace FinalizeDepositERC721Event {
  export type InputTuple = [
    l1Token: AddressLike,
    l2Token: AddressLike,
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [
    l1Token: string,
    l2Token: string,
    from: string,
    to: string,
    tokenId: bigint
  ];
  export interface OutputObject {
    l1Token: string;
    l2Token: string;
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WithdrawERC721Event {
  export type InputTuple = [
    l1Token: AddressLike,
    l2Token: AddressLike,
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [
    l1Token: string,
    l2Token: string,
    from: string,
    to: string,
    tokenId: bigint
  ];
  export interface OutputObject {
    l1Token: string;
    l2Token: string;
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IL2ERC721Gateway extends BaseContract {
  connect(runner?: ContractRunner | null): IL2ERC721Gateway;
  waitForDeployment(): Promise<this>;

  interface: IL2ERC721GatewayInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  "batchWithdrawERC721(address,uint256[],uint256)": TypedContractMethod<
    [token: AddressLike, tokenIds: BigNumberish[], gasLimit: BigNumberish],
    [void],
    "payable"
  >;

  "batchWithdrawERC721(address,address,uint256[],uint256)": TypedContractMethod<
    [
      token: AddressLike,
      to: AddressLike,
      tokenIds: BigNumberish[],
      gasLimit: BigNumberish
    ],
    [void],
    "payable"
  >;

  finalizeBatchDepositERC721: TypedContractMethod<
    [
      l1Token: AddressLike,
      l2Token: AddressLike,
      from: AddressLike,
      to: AddressLike,
      tokenIds: BigNumberish[]
    ],
    [void],
    "nonpayable"
  >;

  finalizeDepositERC721: TypedContractMethod<
    [
      l1Token: AddressLike,
      l2Token: AddressLike,
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  "withdrawERC721(address,uint256,uint256)": TypedContractMethod<
    [token: AddressLike, tokenId: BigNumberish, gasLimit: BigNumberish],
    [void],
    "payable"
  >;

  "withdrawERC721(address,address,uint256,uint256)": TypedContractMethod<
    [
      token: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      gasLimit: BigNumberish
    ],
    [void],
    "payable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "batchWithdrawERC721(address,uint256[],uint256)"
  ): TypedContractMethod<
    [token: AddressLike, tokenIds: BigNumberish[], gasLimit: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "batchWithdrawERC721(address,address,uint256[],uint256)"
  ): TypedContractMethod<
    [
      token: AddressLike,
      to: AddressLike,
      tokenIds: BigNumberish[],
      gasLimit: BigNumberish
    ],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "finalizeBatchDepositERC721"
  ): TypedContractMethod<
    [
      l1Token: AddressLike,
      l2Token: AddressLike,
      from: AddressLike,
      to: AddressLike,
      tokenIds: BigNumberish[]
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "finalizeDepositERC721"
  ): TypedContractMethod<
    [
      l1Token: AddressLike,
      l2Token: AddressLike,
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "withdrawERC721(address,uint256,uint256)"
  ): TypedContractMethod<
    [token: AddressLike, tokenId: BigNumberish, gasLimit: BigNumberish],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "withdrawERC721(address,address,uint256,uint256)"
  ): TypedContractMethod<
    [
      token: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      gasLimit: BigNumberish
    ],
    [void],
    "payable"
  >;

  getEvent(
    key: "BatchWithdrawERC721"
  ): TypedContractEvent<
    BatchWithdrawERC721Event.InputTuple,
    BatchWithdrawERC721Event.OutputTuple,
    BatchWithdrawERC721Event.OutputObject
  >;
  getEvent(
    key: "FinalizeBatchDepositERC721"
  ): TypedContractEvent<
    FinalizeBatchDepositERC721Event.InputTuple,
    FinalizeBatchDepositERC721Event.OutputTuple,
    FinalizeBatchDepositERC721Event.OutputObject
  >;
  getEvent(
    key: "FinalizeDepositERC721"
  ): TypedContractEvent<
    FinalizeDepositERC721Event.InputTuple,
    FinalizeDepositERC721Event.OutputTuple,
    FinalizeDepositERC721Event.OutputObject
  >;
  getEvent(
    key: "WithdrawERC721"
  ): TypedContractEvent<
    WithdrawERC721Event.InputTuple,
    WithdrawERC721Event.OutputTuple,
    WithdrawERC721Event.OutputObject
  >;

  filters: {
    "BatchWithdrawERC721(address,address,address,address,uint256[])": TypedContractEvent<
      BatchWithdrawERC721Event.InputTuple,
      BatchWithdrawERC721Event.OutputTuple,
      BatchWithdrawERC721Event.OutputObject
    >;
    BatchWithdrawERC721: TypedContractEvent<
      BatchWithdrawERC721Event.InputTuple,
      BatchWithdrawERC721Event.OutputTuple,
      BatchWithdrawERC721Event.OutputObject
    >;

    "FinalizeBatchDepositERC721(address,address,address,address,uint256[])": TypedContractEvent<
      FinalizeBatchDepositERC721Event.InputTuple,
      FinalizeBatchDepositERC721Event.OutputTuple,
      FinalizeBatchDepositERC721Event.OutputObject
    >;
    FinalizeBatchDepositERC721: TypedContractEvent<
      FinalizeBatchDepositERC721Event.InputTuple,
      FinalizeBatchDepositERC721Event.OutputTuple,
      FinalizeBatchDepositERC721Event.OutputObject
    >;

    "FinalizeDepositERC721(address,address,address,address,uint256)": TypedContractEvent<
      FinalizeDepositERC721Event.InputTuple,
      FinalizeDepositERC721Event.OutputTuple,
      FinalizeDepositERC721Event.OutputObject
    >;
    FinalizeDepositERC721: TypedContractEvent<
      FinalizeDepositERC721Event.InputTuple,
      FinalizeDepositERC721Event.OutputTuple,
      FinalizeDepositERC721Event.OutputObject
    >;

    "WithdrawERC721(address,address,address,address,uint256)": TypedContractEvent<
      WithdrawERC721Event.InputTuple,
      WithdrawERC721Event.OutputTuple,
      WithdrawERC721Event.OutputObject
    >;
    WithdrawERC721: TypedContractEvent<
      WithdrawERC721Event.InputTuple,
      WithdrawERC721Event.OutputTuple,
      WithdrawERC721Event.OutputObject
    >;
  };
}
