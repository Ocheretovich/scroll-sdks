/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface LidoGatewayManagerInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "DEPOSITS_DISABLER_ROLE"
      | "DEPOSITS_ENABLER_ROLE"
      | "WITHDRAWALS_DISABLER_ROLE"
      | "WITHDRAWALS_ENABLER_ROLE"
      | "counterpart"
      | "disableDeposits"
      | "disableWithdrawals"
      | "enableDeposits"
      | "enableWithdrawals"
      | "getRoleMember"
      | "getRoleMemberCount"
      | "grantRole"
      | "hasRole"
      | "isDepositsEnabled"
      | "isWithdrawalsEnabled"
      | "messenger"
      | "owner"
      | "renounceOwnership"
      | "revokeRole"
      | "router"
      | "transferOwnership"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "DepositsDisabled"
      | "DepositsEnabled"
      | "Initialized"
      | "OwnershipTransferred"
      | "RoleGranted"
      | "RoleRevoked"
      | "WithdrawalsDisabled"
      | "WithdrawalsEnabled"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "DEPOSITS_DISABLER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEPOSITS_ENABLER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WITHDRAWALS_DISABLER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WITHDRAWALS_ENABLER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "counterpart",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "disableDeposits",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "disableWithdrawals",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "enableDeposits",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "enableWithdrawals",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isDepositsEnabled",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isWithdrawalsEnabled",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "messenger", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "router", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEPOSITS_DISABLER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEPOSITS_ENABLER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WITHDRAWALS_DISABLER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WITHDRAWALS_ENABLER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "counterpart",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableDeposits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableWithdrawals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableDeposits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableWithdrawals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isDepositsEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isWithdrawalsEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "messenger", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "router", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
}

export namespace DepositsDisabledEvent {
  export type InputTuple = [disabler: AddressLike];
  export type OutputTuple = [disabler: string];
  export interface OutputObject {
    disabler: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DepositsEnabledEvent {
  export type InputTuple = [enabler: AddressLike];
  export type OutputTuple = [enabler: string];
  export interface OutputObject {
    enabler: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGrantedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevokedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WithdrawalsDisabledEvent {
  export type InputTuple = [disabler: AddressLike];
  export type OutputTuple = [disabler: string];
  export interface OutputObject {
    disabler: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WithdrawalsEnabledEvent {
  export type InputTuple = [enabler: AddressLike];
  export type OutputTuple = [enabler: string];
  export interface OutputObject {
    enabler: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface LidoGatewayManager extends BaseContract {
  connect(runner?: ContractRunner | null): LidoGatewayManager;
  waitForDeployment(): Promise<this>;

  interface: LidoGatewayManagerInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  DEPOSITS_DISABLER_ROLE: TypedContractMethod<[], [string], "view">;

  DEPOSITS_ENABLER_ROLE: TypedContractMethod<[], [string], "view">;

  WITHDRAWALS_DISABLER_ROLE: TypedContractMethod<[], [string], "view">;

  WITHDRAWALS_ENABLER_ROLE: TypedContractMethod<[], [string], "view">;

  counterpart: TypedContractMethod<[], [string], "view">;

  disableDeposits: TypedContractMethod<[], [void], "nonpayable">;

  disableWithdrawals: TypedContractMethod<[], [void], "nonpayable">;

  enableDeposits: TypedContractMethod<[], [void], "nonpayable">;

  enableWithdrawals: TypedContractMethod<[], [void], "nonpayable">;

  getRoleMember: TypedContractMethod<
    [_role: BytesLike, _index: BigNumberish],
    [string],
    "view"
  >;

  getRoleMemberCount: TypedContractMethod<[_role: BytesLike], [bigint], "view">;

  grantRole: TypedContractMethod<
    [_role: BytesLike, _account: AddressLike],
    [void],
    "nonpayable"
  >;

  hasRole: TypedContractMethod<
    [_role: BytesLike, _account: AddressLike],
    [boolean],
    "view"
  >;

  isDepositsEnabled: TypedContractMethod<[], [boolean], "view">;

  isWithdrawalsEnabled: TypedContractMethod<[], [boolean], "view">;

  messenger: TypedContractMethod<[], [string], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  revokeRole: TypedContractMethod<
    [_role: BytesLike, _account: AddressLike],
    [void],
    "nonpayable"
  >;

  router: TypedContractMethod<[], [string], "view">;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "DEPOSITS_DISABLER_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "DEPOSITS_ENABLER_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "WITHDRAWALS_DISABLER_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "WITHDRAWALS_ENABLER_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "counterpart"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "disableDeposits"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableWithdrawals"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableDeposits"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableWithdrawals"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getRoleMember"
  ): TypedContractMethod<
    [_role: BytesLike, _index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMemberCount"
  ): TypedContractMethod<[_role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "grantRole"
  ): TypedContractMethod<
    [_role: BytesLike, _account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "hasRole"
  ): TypedContractMethod<
    [_role: BytesLike, _account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "isDepositsEnabled"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "isWithdrawalsEnabled"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "messenger"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeRole"
  ): TypedContractMethod<
    [_role: BytesLike, _account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "router"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;

  getEvent(
    key: "DepositsDisabled"
  ): TypedContractEvent<
    DepositsDisabledEvent.InputTuple,
    DepositsDisabledEvent.OutputTuple,
    DepositsDisabledEvent.OutputObject
  >;
  getEvent(
    key: "DepositsEnabled"
  ): TypedContractEvent<
    DepositsEnabledEvent.InputTuple,
    DepositsEnabledEvent.OutputTuple,
    DepositsEnabledEvent.OutputObject
  >;
  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;
  getEvent(
    key: "RoleGranted"
  ): TypedContractEvent<
    RoleGrantedEvent.InputTuple,
    RoleGrantedEvent.OutputTuple,
    RoleGrantedEvent.OutputObject
  >;
  getEvent(
    key: "RoleRevoked"
  ): TypedContractEvent<
    RoleRevokedEvent.InputTuple,
    RoleRevokedEvent.OutputTuple,
    RoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "WithdrawalsDisabled"
  ): TypedContractEvent<
    WithdrawalsDisabledEvent.InputTuple,
    WithdrawalsDisabledEvent.OutputTuple,
    WithdrawalsDisabledEvent.OutputObject
  >;
  getEvent(
    key: "WithdrawalsEnabled"
  ): TypedContractEvent<
    WithdrawalsEnabledEvent.InputTuple,
    WithdrawalsEnabledEvent.OutputTuple,
    WithdrawalsEnabledEvent.OutputObject
  >;

  filters: {
    "DepositsDisabled(address)": TypedContractEvent<
      DepositsDisabledEvent.InputTuple,
      DepositsDisabledEvent.OutputTuple,
      DepositsDisabledEvent.OutputObject
    >;
    DepositsDisabled: TypedContractEvent<
      DepositsDisabledEvent.InputTuple,
      DepositsDisabledEvent.OutputTuple,
      DepositsDisabledEvent.OutputObject
    >;

    "DepositsEnabled(address)": TypedContractEvent<
      DepositsEnabledEvent.InputTuple,
      DepositsEnabledEvent.OutputTuple,
      DepositsEnabledEvent.OutputObject
    >;
    DepositsEnabled: TypedContractEvent<
      DepositsEnabledEvent.InputTuple,
      DepositsEnabledEvent.OutputTuple,
      DepositsEnabledEvent.OutputObject
    >;

    "Initialized(uint8)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;

    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;
    RoleGranted: TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;

    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
    RoleRevoked: TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;

    "WithdrawalsDisabled(address)": TypedContractEvent<
      WithdrawalsDisabledEvent.InputTuple,
      WithdrawalsDisabledEvent.OutputTuple,
      WithdrawalsDisabledEvent.OutputObject
    >;
    WithdrawalsDisabled: TypedContractEvent<
      WithdrawalsDisabledEvent.InputTuple,
      WithdrawalsDisabledEvent.OutputTuple,
      WithdrawalsDisabledEvent.OutputObject
    >;

    "WithdrawalsEnabled(address)": TypedContractEvent<
      WithdrawalsEnabledEvent.InputTuple,
      WithdrawalsEnabledEvent.OutputTuple,
      WithdrawalsEnabledEvent.OutputObject
    >;
    WithdrawalsEnabled: TypedContractEvent<
      WithdrawalsEnabledEvent.InputTuple,
      WithdrawalsEnabledEvent.OutputTuple,
      WithdrawalsEnabledEvent.OutputObject
    >;
  };
}
