/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IL1BlockContainer,
  IL1BlockContainerInterface,
} from "../../../../src/L2/predeploys/IL1BlockContainer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockHeight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "stateRoot",
        type: "bytes32",
      },
    ],
    name: "ImportBlock",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "getBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "getStateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "stateRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "blockHeaderRLP",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "updateGasPriceOracle",
        type: "bool",
      },
    ],
    name: "importBlockHeader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBaseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IL1BlockContainer__factory {
  static readonly abi = _abi;
  static createInterface(): IL1BlockContainerInterface {
    return new Interface(_abi) as IL1BlockContainerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IL1BlockContainer {
    return new Contract(address, _abi, runner) as unknown as IL1BlockContainer;
  }
}
